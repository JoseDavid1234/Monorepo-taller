version: 0.2

phases:
  install:  # Install dependencies
    runtime-versions:
      nodejs: 18
    commands:
      - npm install  # Install Node.js dependencies (if applicable)
      - pip install --upgrade aws-sam-cli  # Upgrade the AWS SAM CLI

  pre_build:  # Optional: Validate template or application (if applicable)
    commands:
      - sam validate --template-file template.yaml
      # - npm test                   # Run unit tests (optional)

  build:  # Build your application
    commands:
      - sam build --use-container # Build your application (adjust if using a different build process)
      - echo "Listando el directorio de construcción después de sam build..."
      - ls -al .aws-sam/build/

  post_build:  # Package and deploy your application
    commands:
      - echo "Verificando la existencia de node_modules para cada función..."
      - find .aws-sam/build/ -type d -name "node_modules" -exec echo {} \;
      - sam package --template-file template.yaml --output-template-file packaged.yaml --s3-bucket s3-prueba-aws --include-node-modules
      - aws cloudformation deploy --template-file packaged.yaml --stack-name stack-prueba --capabilities CAPABILITY_NAMED_IAM --region us-east-1
      # Despliega cada microfrontend a su respectivo bucket
      - aws s3 sync ./frontend/mfe-contenedor s3://bucket-mfe-contenedor --delete
      - aws s3 sync ./frontend/mfe-lista-usuarios s3://bucket-mfe-lista-usuarios --delete
      - aws s3 sync ./frontend/mfe-crear-usuario s3://bucket-mfe-crear-usuario --delete
      - aws s3 sync ./frontend/mfe-sidebar s3://bucket-mfe-sidebar --delete

artifacts:
  files:
    - packaged.yaml  # Include the packaged template file
